{"version":3,"file":"blog.astro.mjs","sources":["../../../src/components/Blog.tsx","../../../src/pages/blog/index.astro"],"sourcesContent":["import type { CollectionEntry } from \"astro:content\"\r\nimport { createEffect, createSignal, For } from \"solid-js\"\r\nimport ArrowCard from \"@components/ArrowCard\"\r\nimport { cn } from \"@lib/utils\"\r\n\r\ntype Props = {\r\n  tags: string[]\r\n  data: CollectionEntry<\"blog\">[]\r\n}\r\n\r\nexport default function Blog({ data, tags }: Props) {\r\n  const [filter, setFilter] = createSignal(new Set<string>())\r\n  const [posts, setPosts] = createSignal<CollectionEntry<\"blog\">[]>([])\r\n\r\n  createEffect(() => {\r\n    setPosts(data.filter((entry) => \r\n      Array.from(filter()).every((value) => \r\n        entry.data.tags.some((tag:string) => \r\n          tag.toLowerCase() === String(value).toLowerCase()\r\n        )\r\n      )\r\n    ))\r\n  })\r\n\r\n  function toggleTag(tag: string) {\r\n    setFilter((prev) => \r\n      new Set(prev.has(tag) \r\n        ? [...prev].filter((t) => t !== tag) \r\n        : [...prev, tag]\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-6\">\r\n      <div class=\"col-span-3 sm:col-span-1\">\r\n        <div class=\"sticky top-24\">\r\n          <div class=\"text-sm font-semibold uppercase mb-2 text-black dark:text-white\">Filter</div>\r\n          <ul class=\"flex flex-wrap sm:flex-col gap-1.5\">\r\n            <For each={tags}>\r\n              {(tag) => (\r\n                <li>\r\n                  <button onClick={() => toggleTag(tag)} class={cn(\"w-full px-2 py-1 rounded\", \"whitespace-nowrap overflow-hidden overflow-ellipsis\", \"flex gap-2 items-center\", \"bg-black/5 dark:bg-white/10\", \"hover:bg-black/10 hover:dark:bg-white/15\", \"transition-colors duration-300 ease-in-out\", filter().has(tag) && \"text-black dark:text-white\")}>\r\n                    <svg class={cn(\"size-5 fill-black/50 dark:fill-white/50\", \"transition-colors duration-300 ease-in-out\", filter().has(tag) && \"fill-black dark:fill-white\")}>\r\n                      <use href={`/ui.svg#square`} class={cn(!filter().has(tag) ? \"block\" : \"hidden\")} />\r\n                      <use href={`/ui.svg#square-check`} class={cn(filter().has(tag) ? \"block\" : \"hidden\")} />\r\n                    </svg>\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              )}\r\n            </For>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-span-3 sm:col-span-2\">\r\n        <div class=\"flex flex-col\">\r\n          <div class=\"text-sm uppercase mb-2\">\r\n            SHOWING {posts().length} OF {data.length} POSTS\r\n          </div>\r\n          <ul class=\"flex flex-col gap-3\">\r\n            {posts().map((post) => (\r\n              <li>\r\n                <ArrowCard entry={post} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","---\r\nimport { getCollection } from \"astro:content\"\r\nimport PageLayout from \"@layouts/PageLayout.astro\"\r\nimport TopLayout from \"@layouts/TopLayout.astro\"\r\nimport BottomLayout from \"@layouts/BottomLayout.astro\"\r\nimport Blog from \"@components/Blog\"\r\nimport { BLOG } from \"@consts\"\r\n\r\nconst posts = (await getCollection(\"blog\"))\r\n  .filter(post => !post.data.draft)\r\n  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())\r\n\r\nconst tags = [...new Set(posts.flatMap(post => post.data.tags))]\r\n  .sort((a, b) => a.localeCompare(b))\r\n---\r\n\r\n<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>\r\n  <TopLayout>\r\n    <div class=\"animate page-heading\">\r\n      {BLOG.TITLE}\r\n    </div>\r\n  </TopLayout>\r\n  <BottomLayout>\r\n    <div class=\"animate\">\r\n      <Blog client:load tags={tags} data={posts} />\r\n    </div>\r\n  </BottomLayout>\r\n</PageLayout>\r\n\r\n\r\n"],"names":["Blog","data","tags","filter","setFilter","createSignal","Set","posts","setPosts","createEffect","entry","Array","from","every","value","some","tag","toLowerCase","String","_$ssr","_tmpl$","_$ssrHydrationKey","_$escape","_$createComponent","For","each","children","_tmpl$2","_$ssrAttribute","cn","has","length","map","post","_tmpl$3","ArrowCard","$$createComponent","$$render","$$renderComponent","PageLayout","$$result","TopLayout","$$maybeRenderHead","BottomLayout"],"mappings":"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"}