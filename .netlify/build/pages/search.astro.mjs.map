{"version":3,"file":"search.astro.mjs","sources":["../../../src/components/Search.tsx","../../../src/pages/search/index.astro"],"sourcesContent":["import type { CollectionEntry } from \"astro:content\"\r\nimport { createEffect, createSignal } from \"solid-js\"\r\nimport Fuse from \"fuse.js\"\r\nimport ArrowCard from \"@components/ArrowCard\"\r\n\r\ntype Props = {\r\n  data: CollectionEntry<\"blog\">[]\r\n}\r\n\r\nexport default function Search({data}: Props) {\r\n  const [query, setQuery] = createSignal(\"\")\r\n  const [results, setResults] = createSignal<CollectionEntry<\"blog\">[]>([])\r\n\r\n  const fuse = new Fuse(data, {\r\n    keys: [\"slug\", \"data.title\", \"data.summary\", \"data.tags\"],\r\n    includeMatches: true,\r\n    minMatchCharLength: 2,\r\n    threshold: 0.4,\r\n  })\r\n\r\n  createEffect(() => {\r\n    if (query().length < 2) {\r\n      setResults([])\r\n    } else {\r\n      setResults(fuse.search(query()).map((result) => result.item))\r\n    }\r\n  })\r\n\r\n  const onInput = (e: Event) => {\r\n    const target = e.target as HTMLInputElement\r\n    setQuery(target.value)\r\n  }\r\n\r\n  return (\r\n    <div class=\"flex flex-col\">\r\n      <div class=\"relative\">\r\n        <input name=\"search\" type=\"text\" value={query()} onInput={onInput} autocomplete=\"off\" spellcheck={false} placeholder=\"What are you looking for?\" class=\"w-full px-2.5 py-1.5 pl-10 rounded outline-none text-black dark:text-white bg-black/5 dark:bg-white/15 border border-black/10 dark:border-white/20 focus:border-black focus:dark:border-white\"/>\r\n        <svg class=\"absolute size-6 left-1.5 top-1/2 -translate-y-1/2 stroke-current\">\r\n          <use href={`/ui.svg#search`}/>\r\n        </svg>\r\n      </div>\r\n      {(query().length >= 2 && results().length >= 1) && (\r\n        <div class=\"mt-12\">\r\n          <div class=\"text-sm uppercase mb-2\">\r\n            Found {results().length} results for {`'${query()}'`}\r\n          </div>\r\n          <ul class=\"flex flex-col gap-3\">\r\n            {results().map(result => (\r\n              <li>\r\n                <ArrowCard entry={result} pill={true} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}","---\r\nimport { type CollectionEntry, getCollection } from \"astro:content\"\r\nimport PageLayout from \"@layouts/PageLayout.astro\"\r\nimport TopLayout from \"@layouts/TopLayout.astro\"\r\nimport BottomLayout from \"@layouts/BottomLayout.astro\"\r\nimport Search from \"@components/Search\"\r\nimport { SEARCH } from \"@consts\"\r\n\r\nconst posts = (await getCollection(\"blog\"))\r\n  .filter(post => !post.data.draft)\r\n\r\nconst projects = (await getCollection(\"projects\"))\r\n  .filter(post => !post.data.draft)\r\n\r\nconst data = [...posts, ...projects] as CollectionEntry<\"blog\">[]\r\n---\r\n\r\n<PageLayout title={SEARCH.TITLE} description={SEARCH.DESCRIPTION}>\r\n  <TopLayout>\r\n    <div class=\"animate page-heading\">\r\n      {SEARCH.TITLE}\r\n    </div>\r\n  </TopLayout>\r\n  <BottomLayout>\r\n    <div class=\"animate\">\r\n      <Search client:load data={data}/>\r\n    </div>\r\n  </BottomLayout>\r\n</PageLayout>"],"names":["Search","data","query","setQuery","createSignal","results","setResults","fuse","Fuse","keys","includeMatches","minMatchCharLength","threshold","createEffect","length","search","map","result","item","_$ssr","_tmpl$","_$ssrHydrationKey","_$ssrAttribute","_$escape","_tmpl$2","_tmpl$3","_$createComponent","ArrowCard","entry","pill","$$createComponent","$$render","$$renderComponent","PageLayout","$$result","TopLayout","$$maybeRenderHead","BottomLayout"],"mappings":"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"}