name: Clean up old packages

on:
  push:
    branches:
      - master
      - dev
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:
      - name: Delete untagged and SHA packages
        uses: actions/delete-package-versions@v5
        with:
          package-name: 10
          package-type: 'container'
          min-versions-to-keep: 0
          delete-only-untagged-versions: true  # Target untagged/SHA versions
          ignore-versions: |
            master
            dev
            cr*
          token: ${{ github.token }}

      - name: Delete SHA tagged packages
        uses: actions/github-script@v7
        with:
          script: |
            const pkgs = await github.rest.packages.getAllPackageVersionsForPackageOwnedByOrg({
              package_type: 'container',
              package_name: '10',
              org: context.repo.owner
            });
            
            for (const pkg of pkgs.data) {
              if (pkg.metadata.container.tags.some(tag => tag.startsWith('sha256:'))) {
                await github.rest.packages.deletePackageVersionForOrg({
                  package_type: 'container',
                  package_name: '10',
                  org: context.repo.owner,
                  package_version_id: pkg.id
                });
              }
            }