---
const sentences = [
  "Husk quests to be the best server architect of their generation and won't stop until they reach the top.",
  "Husk is forever seeking new and innovative solutions for every tech scenario.",
  "Husk is like a dog with a bone when it comes to building excellent solutions for every server need.",
  "I'm no good at (insert random hobby/sport/etc here) so I decided to be amazing at server solutions instead.",
  "I'm no good at Scrabble so I excel at server architecture and IT solutions instead",
  "Peter is whatever",
];
---

<style>
  .flash {
    animation: flash 1s infinite;
  }
  @keyframes flash {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  .glow {
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
  }
  .animate-fade-right {
    animation: fade-right 1s forwards;
  }
  @keyframes fade-right {
    from {
      opacity: 0;
      transform: translateX(-10px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  .invisible {
    visibility: hidden;
  }
  .subheading {
    font-size: 2rem; /* Adjust this size as needed */
  }
  .headst {
    font-size: 3rem;
  }
</style>

<div id="quoutes" class="text-center h-screen flex">
  <div
    class="py-8 px-4 m-auto max-w-screen-xl text-center lg:py-16 z-10 relative"
  >
    <h2
      class="mb-4 text-3xl font-extrabold tracking-tight leading-none text-gray-900 md:text-4xl lg:text-5xl dark:text-white"
    >
      What people have to say about me?
    </h2>
    <p
      id="titleText"
      class="mb-4 subheading font-extrabold tracking-tight leading-none text-gray-900 md:text-4xl lg:text-5xl dark:text-white inline-block transition-all glow"
    >
    </p>
    <p
      id="cursor"
      class="mb-4 subheading font-extrabold tracking-tight leading-none text-gray-900 md:text-4xl lg:text-5xl dark:text-white inline-block flash"
    >
      |
    </p>
    <p
      id="subHeading"
      class="mb-8 text-lg font-normal lg:text-xl sm:px-16 lg:px-48 invisible"
    >
    </p>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const titleElement = document.getElementById("titleText");
    const cursorElement = document.getElementById("cursor");
    const subHeadingElement = document.getElementById("subHeading");

    if (!titleElement || !cursorElement || !subHeadingElement) {
      console.error("One or more elements not found in the DOM.");
      return;
    }

    const sentences = [
      "Husk quests to be the best server architect of their generation and won't stop until they reach the top.",
      "Husk is forever seeking new and innovative solutions for every tech scenario.",
      "Husk is like a dog with a bone when it comes to building excellent solutions for every server need.",
      "I'm no good at (insert random hobby/sport/etc here) so I decided to be amazing at server solutions instead.",
      "I'm no good at Scrabble so I excel at server architecture and IT solutions instead",
      "Peter is whatever",
    ];

    let currentSentenceIndex = 0;

    function type(text, callback) {
      let typedText = "";
      let i = 0;
      const interval = setInterval(() => {
        typedText += text[i];
        titleElement.innerText = typedText;
        if (i === text.length - 1) {
          clearInterval(interval);
          cursorElement.classList.remove("flash");
          setTimeout(() => {
            subHeadingElement.classList.remove("invisible");
            subHeadingElement.classList.add("animate-fade-right");
            if (callback) callback();
          }, 500);
        }
        i++;
      }, 80);
    }

    function backspace(callback) {
      let text = titleElement.innerText;
      const interval = setInterval(() => {
        text = text.slice(0, -1);
        titleElement.innerText = text;
        if (text.length === 0) {
          clearInterval(interval);
          cursorElement.classList.add("flash");
          if (callback) callback();
        }
      }, 50);
    }

    function cycleSentences() {
      type(sentences[currentSentenceIndex], () => {
        setTimeout(() => {
          backspace(() => {
            subHeadingElement.classList.add("invisible");
            currentSentenceIndex =
              (currentSentenceIndex + 1) % sentences.length;
            setTimeout(cycleSentences, 500); // Wait before typing the next sentence
          });
        }, 2000); // Wait before clearing the text
      });
    }

    function handleScroll() {
      const position =
        window.pageYOffset ||
        document.documentElement.scrollTop ||
        document.body.scrollTop;
      if (position > 400) {
        cursorElement.style.display = "none";
        window.removeEventListener("scroll", handleScroll);
        subHeadingElement.classList.remove("invisible");
        subHeadingElement.classList.add("animate-fade-right");
      }
    }

    window.addEventListener("scroll", handleScroll);

    setTimeout(() => {
      cycleSentences();
    }, 1000);
  });
</script>
