---
import fetch from 'node-fetch';

const twitchChannel = import.meta.env.TWITCH_CHANNEL;
const clientId = import.meta.env.TWITCH_CLIENT_ID;
const clientSecret = import.meta.env.TWITCH_CLIENT_SECRET;

// Fetch Twitch access token
const getAccessToken = async () => {
  try {
    const response = await fetch('https://id.twitch.tv/oauth2/token', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
      },
      body: new URLSearchParams({
        client_id: clientId,
        client_secret: clientSecret,
        grant_type: 'client_credentials',
      }),
    });

    if (!response.ok) {
      console.error('Failed to fetch access token:', response.statusText);
      return null;
    }

    const data = await response.json();
    return data.access_token;
  } catch (error) {
    console.error('Error fetching access token:', error);
    return null;
  }
};

// Check if stream is live
const checkIfLive = async (accessToken) => {
  try {
    const response = await fetch(`https://api.twitch.tv/helix/streams?user_login=${twitchChannel}`, {
      headers: {
        'Client-ID': clientId,
        'Authorization': `Bearer ${accessToken}`,
      },
    });

    if (!response.ok) {
      console.error('Failed to fetch stream data:', response.statusText);
      return false;
    }

    const data = await response.json();
    
    if (data && data.data && Array.isArray(data.data) && data.data.length > 0) {
      return true;  // Stream is live
    }

    return false;  // Stream is offline
  } catch (error) {
    console.error('Error checking stream status:', error);
    return false;
  }
};

// Server-side logic
const accessToken = await getAccessToken();
let isLive = false;

if (accessToken) {
  isLive = await checkIfLive(accessToken);
} else {
  console.error('No access token available.');
}
---

{isLive ? (
  <div class="flex flex-col justify-center items-center h-120">
    <h1 class="text-2xl font-bold text-center mb-4 text-white">I'm Live Right Now Over On Twitch</h1> <!-- Added header -->
    <div class="w-full max-w-4xl">  
      <iframe
        src={`https://player.twitch.tv/?channel=${twitchChannel}&parent=www.husky.nz&controls=false`}
        frameborder="0"
        allowfullscreen="true"
        scrolling="no"
        class="w-full h-96 rounded-lg" 
      ></iframe>
    </div>
    <a
      href={`https://www.twitch.tv/${twitchChannel}`}
      target="_blank"
      rel="noopener noreferrer"
      class="bg-white text-gray-900 font-bold py-2 px-4 rounded hover:bg-gray-200 transition duration-300"
    >
      Visit My Twitch Channel
    </a>
  </div>
) : (
  <div class="flex flex-col justify-center items-center h-50">
    <h1 class="text-2xl font-bold text-center mb-4 text-white">Im Currently offline. Check back later!</>
    <a
      href={`https://www.twitch.tv/${twitchChannel}`}
      target="_blank"
      rel="noopener noreferrer"
      class="bg-white text-gray-900 font-bold py-2 px-4 rounded hover:bg-gray-200 transition duration-300"
    >
      Visit My Twitch Channel
    </a>
  </div>
)}
